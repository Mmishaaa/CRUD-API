(()=>{var e={696:(e,t,r)=>{const n=r(58),o=r(72),s=r(558),i=r(968),a=r(404).version,c=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function d(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function u(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function l(e,t){let r;try{r=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const n=r.password;if(!n){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const o=r.searchParams.get("environment");if(!o){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const s=`DOTENV_VAULT_${o.toUpperCase()}`,i=e.parsed[s];if(!i){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:i,key:n}}function p(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const r of e.path)n.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=o.resolve(process.cwd(),".env.vault");return n.existsSync(t)?t:null}const T={configDotenv:function(e){let t=o.resolve(process.cwd(),".env"),r="utf8";const i=Boolean(e&&e.debug);if(e){if(null!=e.path){let r=e.path;if(Array.isArray(r))for(const t of e.path)if(n.existsSync(t)){r=t;break}t=function(e){return"~"===e[0]?o.join(s.homedir(),e.slice(1)):e}(r)}null!=e.encoding?r=e.encoding:i&&d("No encoding is specified. UTF-8 is used by default")}try{const o=T.parse(n.readFileSync(t,{encoding:r}));let s=process.env;return e&&null!=e.processEnv&&(s=e.processEnv),T.populate(s,o,e),{parsed:o}}catch(e){return i&&d(`Failed to load ${t} ${e.message}`),{error:e}}},_configVault:function(e){console.log(`[dotenv@${a}][INFO] Loading env from encrypted .env.vault`);const t=T._parseVault(e);let r=process.env;return e&&null!=e.processEnv&&(r=e.processEnv),T.populate(r,t,e),{parsed:t}},_parseVault:function(e){const t=p(e),r=T.configDotenv({path:t});if(!r.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const n=u(e).split(","),o=n.length;let s;for(let e=0;e<o;e++)try{const t=l(r,n[e].trim());s=T.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=o)throw t}return T.parse(s)},config:function(e){if(0===u(e).length)return T.configDotenv(e);const t=p(e);return t?T._configVault(e):(r=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${a}][WARN] ${r}`),T.configDotenv(e));var r},decrypt:function(e,t){const r=Buffer.from(t.slice(-64),"hex");let n=Buffer.from(e,"base64");const o=n.subarray(0,12),s=n.subarray(-16);n=n.subarray(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",r,o);return e.setAuthTag(s),`${e.update(n)}${e.final()}`}catch(e){const t=e instanceof RangeError,r="Invalid key length"===e.message,n="Unsupported state or unable to authenticate data"===e.message;if(t||r){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(n){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let r,n=e.toString();for(n=n.replace(/\r\n?/gm,"\n");null!=(r=c.exec(n));){const e=r[1];let n=r[2]||"";n=n.trim();const o=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===o&&(n=n.replace(/\\n/g,"\n"),n=n.replace(/\\r/g,"\r")),t[e]=n}return t},populate:function(e,t,r={}){const n=Boolean(r&&r.debug),o=Boolean(r&&r.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(!0===o&&(e[r]=t[r]),n&&d(!0===o?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}};e.exports.configDotenv=T.configDotenv,e.exports._configVault=T._configVault,e.exports._parseVault=T._parseVault,e.exports.config=T.config,e.exports.decrypt=T.decrypt,e.exports.parse=T.parse,e.exports.populate=T.populate,e.exports=T},968:e=>{"use strict";e.exports=require("crypto")},58:e=>{"use strict";e.exports=require("fs")},558:e=>{"use strict";e.exports=require("os")},72:e=>{"use strict";e.exports=require("path")},404:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.4.1","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://github.com/motdotla/dotenv?sponsor=1","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";const e=require("http");var t=r.n(e);const n=(e,t,r)=>{e.writeHead(t,{"Content-Type":"text/plain"}),e.write(r),e.end()},o=(e,t,r)=>{e.writeHead(t,{"Content-Type":"application/json"}),e.write(JSON.stringify(r)),e.end()};var s=r(696),i=r.n(s);const a=[],c=e=>{const{username:t,age:r,hobbies:n}=e;return"object"==typeof e&&"string"==typeof t&&"number"==typeof r&&Array.isArray(n)&&n.every((e=>"string"==typeof e))};var d=r(968),u=r.n(d);const l={randomUUID:u().randomUUID},p=new Uint8Array(256);let T=p.length;function f(){return T>p.length-16&&(u().randomFillSync(p),T=0),p.slice(T,T+=16)}const v=[];for(let e=0;e<256;++e)v.push((e+256).toString(16).slice(1));const _=function(e,t,r){if(l.randomUUID&&!t&&!e)return l.randomUUID();const n=(e=e||{}).random||(e.rng||f)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return function(e,t=0){return v[e[t+0]]+v[e[t+1]]+v[e[t+2]]+v[e[t+3]]+"-"+v[e[t+4]]+v[e[t+5]]+"-"+v[e[t+6]]+v[e[t+7]]+"-"+v[e[t+8]]+v[e[t+9]]+"-"+v[e[t+10]]+v[e[t+11]]+v[e[t+12]]+v[e[t+13]]+v[e[t+14]]+v[e[t+15]]}(n)},E=new class{getAllUsers=()=>a;getUserById=e=>a.find((t=>t.id===e));createUser=e=>c(e)?(e.id=_(),a.push(e),e):null;updateUser=(e,t)=>{const r=this.getUserById(t);if(!r)return null;if(e.id=t,c(e)){const t=a.indexOf(r);return a[t]=e,e}return null};deleteUser=e=>{const t=a.findIndex((t=>t.id===e));-1!==t&&a.splice(t,1)}},g=async e=>new Promise(((t,r)=>{let n="";e.on("data",(e=>{n+=e})),e.on("end",(()=>{try{const e=JSON.parse(n);t(e)}catch(e){r(e)}}))})),N=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,y=function(e){return"string"==typeof e&&N.test(e)},O=[/^\/api\/users$/,/^\/api\/users\/$/,/^\/api\/users\/[\w-]+$/,/^\/api\/users\/[\w-]+\/$/];var h;!function(e){e.GET="GET",e.POST="POST",e.PUT="PUT",e.DELETE="DELETE"}(h||(h={}));const D=h;var m;!function(e){e[e.HTTP_OK=200]="HTTP_OK",e[e.HTTP_CREATED=201]="HTTP_CREATED",e[e.HTTP_NO_CONTENT=204]="HTTP_NO_CONTENT",e[e.HTTP_BAD_REQUEST=400]="HTTP_BAD_REQUEST",e[e.HTTP_NOT_FOUND=404]="HTTP_NOT_FOUND",e[e.HTTP_INTERNAL_ERROR=500]="HTTP_INTERNAL_ERROR"}(m||(m={}));const U=m,P=async(e,t,r,s)=>{if((e=>O.some((t=>t.test(e))))(e))switch(t){case D.GET:try{if(e.startsWith("/api/users")){const t=e.split("/")[3];if(!t){const e=E.getAllUsers();return void o(s,U.HTTP_OK,e)}if(!y(t))return void n(s,U.HTTP_BAD_REQUEST,"userid is invalid");const r=E.getUserById(t);return r?void o(s,U.HTTP_OK,r):void n(s,U.HTTP_NOT_FOUND,`user with id ${t} doesn't exist`)}return void n(s,U.HTTP_NOT_FOUND,"you're trying to access a non-exesting endpoint")}catch{return void n(s,U.HTTP_INTERNAL_ERROR,"error occures on the server side")}case D.POST:try{if("/api/users"===e||"/api/users/"===e){const e=await g(r);return E.createUser(e)?void o(s,U.HTTP_CREATED,e):void n(s,U.HTTP_BAD_REQUEST,"request body does not contain required fields")}return void n(s,U.HTTP_NOT_FOUND,"you're trying to access a non-exesting endpoint")}catch{return void n(s,U.HTTP_INTERNAL_ERROR,"error occures on the server side")}case D.PUT:try{if(e.startsWith("/api/users")){const t=e.split("/")[3],i=await g(r);if(!t){const e=E.getAllUsers();return void o(s,U.HTTP_OK,e)}if(!y(t))return void n(s,U.HTTP_BAD_REQUEST,"userid is invalid");if(E.getUserById(t)){const e=E.updateUser(i,t);return e?void o(s,U.HTTP_OK,e):void n(s,U.HTTP_BAD_REQUEST,"request body does not contain required fields")}return void n(s,U.HTTP_NOT_FOUND,`user with id ${t} doesn't exist`)}return void n(s,U.HTTP_NOT_FOUND,"you're trying to access a non-exesting endpoint")}catch{return void n(s,U.HTTP_INTERNAL_ERROR,"error occures on the server side")}case D.DELETE:try{if(e.startsWith("/api/users")){const t=e.split("/")[3];if(!t){const e=E.getAllUsers();return void o(s,U.HTTP_OK,e)}return y(t)?E.getUserById(t)?(E.deleteUser(t),void o(s,U.HTTP_NO_CONTENT,null)):void n(s,U.HTTP_NOT_FOUND,`user with id ${t} doesn't exist`):void n(s,U.HTTP_BAD_REQUEST,"userid is invalid")}return void n(s,U.HTTP_NOT_FOUND,"you're trying to access a non-exesting endpoint")}catch{return void n(s,U.HTTP_INTERNAL_ERROR,"error occures on the server side")}default:o(s,U.HTTP_NOT_FOUND,{message:"You're trying to use a not-provided method"})}else n(s,U.HTTP_NOT_FOUND,"you're trying to access a non-exesting endpoint")};i().config();const R=process.env.PORT||3e3,w=t().createServer(((e,t)=>{try{((e,t)=>{const r=e.url,n=e.method;r&&n&&P(r,n,e,t)})(e,t)}catch(e){n(t,500,"error occures on the server side")}}));w.on("request",(e=>{console.log(`${e.method} ${e.url}`)})),w.listen(R,(()=>{console.log("Server is running on port: "+R)}))})()})();